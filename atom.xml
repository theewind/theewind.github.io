<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>sanfeng’s blog</title>
  <subtitle>sanfengflying</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://theewind.github.io/"/>
  <updated>2016-05-14T06:54:18.000Z</updated>
  <id>http://theewind.github.io/</id>
  
  <author>
    <name>sanfeng.li</name>
    <email>sanfengflying@126.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>iOS横屏应用旋转无动画</title>
    <link href="http://theewind.github.io/2016/05/14/iOS%E6%A8%AA%E5%B1%8F%E5%BA%94%E7%94%A8%E6%97%8B%E8%BD%AC%E6%97%A0%E5%8A%A8%E7%94%BB/"/>
    <id>http://theewind.github.io/2016/05/14/iOS横屏应用旋转无动画/</id>
    <published>2016-05-14T06:43:33.000Z</published>
    <updated>2016-05-14T06:54:18.000Z</updated>
    
    <content type="html">&lt;p&gt;最近开发一个紧支持横屏的应用，发现进行180°旋转的时候没有动画，Google也没有遇到有用的信息，显示的情况跟下面连接比较像&lt;a href=&quot;http://stackoverflow.com/questions/32848456/ios-9-orientation-auto-rotation-animation-not-working-but-always-on-main-thread/37222383#37222383&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;无动画效果&lt;/a&gt;. 最后在苹果的官网资料上找到了灵感：&lt;a href=&quot;https://developer.apple.com/library/ios/technotes/tn2244/_index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://developer.apple.com/library/ios/technotes/tn2244/_index.html&lt;/a&gt; 根据这个里面的内容，全部进行了操作，最后发现是LaunchScreen.stroyboard的问题，在&lt;br&gt;&lt;img src=&quot;http://7xthb9.com1.z0.glb.clouddn.com/launchScreen.png&quot; alt=&quot;设置&quot;&gt; 中对Main Interface 和 Launch Screen File都设置成了空，将Launch Images Source 另外指定了图片，然后就解决了此问题。&lt;/p&gt;
&lt;p&gt;我的解决方案不一定完全使用所有的情况，这里仅仅是做一个记录，有需要的可以试一下。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;最近开发一个紧支持横屏的应用，发现进行180°旋转的时候没有动画，Google也没有遇到有用的信息，显示的情况跟下面连接比较像&lt;a href=&quot;http://stackoverflow.com/questions/32848456/ios-9-orientation-aut
    
    </summary>
    
    
      <category term="iOS" scheme="http://theewind.github.io/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>命令行解释括号说明</title>
    <link href="http://theewind.github.io/2016/05/03/%E5%91%BD%E4%BB%A4%E8%A1%8C%E8%A7%A3%E9%87%8A%E6%8B%AC%E5%8F%B7%E8%AF%B4%E6%98%8E/"/>
    <id>http://theewind.github.io/2016/05/03/命令行解释括号说明/</id>
    <published>2016-05-03T07:37:24.000Z</published>
    <updated>2016-05-03T07:46:35.000Z</updated>
    
    <content type="html">&lt;p&gt;命令行解释括号的作用：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;表示法&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;不带方括号或大括号的文本&lt;/td&gt;
&lt;td&gt;您必须键入如下所示的项目&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;lt;尖括号内的文本&amp;gt;&lt;/td&gt;
&lt;td&gt;您必须为其提供的占位符&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;[方括号内的文本]&lt;/td&gt;
&lt;td&gt;可选的项目&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;{大括号内的文本}&lt;/td&gt;
&lt;td&gt;一组所需的项目，选择一个&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;竖线（\&lt;/td&gt;
&lt;td&gt;）&lt;/td&gt;
&lt;td&gt;互斥项&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;比如&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git [--version] [--help] [-C &amp;lt;path&amp;gt;] [-c name=value]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           [--exec-path[=&amp;lt;path&amp;gt;]] [--html-path] [--man-path] [--info-path]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           [-p | --paginate | --no-pager] [--no-replace-objects] [--bare]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           [--git-dir=&amp;lt;path&amp;gt;] [--work-tree=&amp;lt;path&amp;gt;] [--namespace=&amp;lt;name&amp;gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &amp;lt;command&amp;gt; [&amp;lt;args&amp;gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NAME&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       git-checkout - Switch branches or restore working tree files&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SYNOPSIS&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       git checkout [-q] [-f] [-m] [&amp;lt;branch&amp;gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       git checkout [-q] [-f] [-m] --detach [&amp;lt;branch&amp;gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       git checkout [-q] [-f] [-m] [--detach] &amp;lt;commit&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       git checkout [-q] [-f] [-m] [[-b|-B|--orphan] &amp;lt;new_branch&amp;gt;] [&amp;lt;start_point&amp;gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       git checkout [-f|--ours|--theirs|-m|--conflict=&amp;lt;style&amp;gt;] [&amp;lt;tree-ish&amp;gt;] [--] &amp;lt;paths&amp;gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       git checkout [-p|--patch] [&amp;lt;tree-ish&amp;gt;] [--] [&amp;lt;paths&amp;gt;...]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;命令行解释括号的作用：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;表示法&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;不带方括号或大括号的文本&lt;/td&gt;
&lt;td&gt;您必须键入如下所示的项目&lt;/td&gt;
&lt;td
    
    </summary>
    
    
      <category term="shell" scheme="http://theewind.github.io/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>shell命令学习</title>
    <link href="http://theewind.github.io/2016/05/03/shell%E5%91%BD%E4%BB%A4%E5%AD%A6%E4%B9%A0/"/>
    <id>http://theewind.github.io/2016/05/03/shell命令学习/</id>
    <published>2016-05-03T06:49:51.000Z</published>
    <updated>2016-05-03T07:35:43.000Z</updated>
    
    <content type="html">&lt;p&gt;提交Jenkins的时候，会用到部分命令：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;df -h&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Filesystem      Size   Used  Avail Capacity  iused   ifree %iused  Mounted on&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/dev/disk1     233Gi  199Gi   33Gi    86% 52321616 8659602   86%   /&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;devfs          187Ki  187Ki    0Bi   100%      648       0  100%   /dev&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;map -hosts       0Bi    0Bi    0Bi   100%        0       0  100%   /net&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;map auto_home    0Bi    0Bi    0Bi   100%        0       0  100%   /home&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;em&gt;df 命令：&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;linux中df命令的功能是用来检查linux服务器的文件系统的磁盘空间占用情况。可以利用该命令来获取硬盘被占用了多少空间，目前还剩下多少空间等信息。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;em&gt;date命令&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;修改linux的时间可以使用date指令 &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;date&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Tue May  3 14:53:22 CST 2016&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;➜  _posts git:(master) ✗ date &amp;apos;+Current time: %H:%M:%S&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Current time: 14:53:24 //可见这里会自定义输出date的格式&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;修改日期： &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;时间设定成2009年5月10日的命令如下：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;date -s 05/10/2009 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;修改时间： &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;将系统时间设定成上午10点18分0秒的命令如下。 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;date -s 10:18:00&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;git命令**&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;git branch newBranch   创建新分支 git br &lt;/p&gt;
&lt;p&gt;git checkout newBranch    切换到新分支 git co&lt;/p&gt;
&lt;p&gt;合并： git checkout -b newBranch&lt;br&gt;简写： git co -b newBranch&lt;/p&gt;
&lt;p&gt;git br nnew [commit] 以某次commit创建分支&lt;/p&gt;
&lt;p&gt;git checkout -B &lt;branch&gt;&lt;/branch&gt;&lt;/p&gt;
&lt;p&gt;这个命令，可以强制创建新的分支，为什么加-B呢？如果当前仓库中，已经存在一个跟你新建分支同名的分支，那么使用普通的git checkout -b &lt;branch&gt;这个命令，是会报错的，且同名分支无法创建。如果使用-B参数，那么就可以强制创建新的分支，并会覆盖掉原来的分支。&lt;/branch&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;提交Jenkins的时候，会用到部分命令：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;
    
    </summary>
    
    
      <category term="shell" scheme="http://theewind.github.io/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>thrift学习</title>
    <link href="http://theewind.github.io/2016/04/29/thrift-study/"/>
    <id>http://theewind.github.io/2016/04/29/thrift-study/</id>
    <published>2016-04-29T09:44:20.000Z</published>
    <updated>2016-04-28T09:58:58.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;strong&gt;其实thrift和点评的nvobject蛮像的，其中，TBinaryProtocol都是二进制传输，然后将属性的字段进行压缩，较少网络传输的数据。&lt;br&gt;比如点评是采用hash值，每个对象的属性都有个hash值，然后传输此hash值，客户端根据hash值对应属性，而thrift是采用编号的方式，在idl描述文件中，就已经设置好了编号，然后传输编号到服务端，客户端根据编号对应属性。
&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;thrift -gen cocoa &lt;em&gt;**&lt;/em&gt;&lt;/strong&gt;.thrift 生成.h.m文件，然后添加工程，然后调用方法如下：**&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;##例如：&lt;br&gt;METMemberCardServiceClient是最终发送请求的类，而他依赖TBinaryProtocol&lt;tportocol&gt;&lt;/tportocol&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;- (void)getDisplayTypefinished:(void(^)(METMineMembercardExhibitionType result, SAKError *error))finished
{
NSDictionary *headerParams = @{@&amp;quot;token&amp;quot; : kUserToken, @&amp;quot;userId&amp;quot; : kUserID, @&amp;quot;clientKey&amp;quot; :  @&amp;quot;group&amp;quot;};
TBinaryProtocol *binaryProtocol = [self createThriftProtocol:kMemberCardServiceURLString headerParameters:headerParams];
METMemberCardServiceClient *memberCardService = [[METMemberCardServiceClient alloc] initWithProtocol:binaryProtocol];
[memberCardService getDisplayTypefinished:^(int result, SAKError *error) {
    if (error) {
        if (finished) {
            @within_main_thread(finished, 0, error);
        }
        return;
    }
    if (finished) {
        @within_main_thread(finished, result, error);
    }
}];
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;TBinaryProtocol的构造需要SAKMascoTransport&lt;ttransport&gt;，而SAKMascoTransport&lt;ttransport&gt;的构造需要：THTTPClient&lt;ttransport&gt;，其中SAKMascoTransport是对THTTPClient的封装。&lt;br&gt;THTTPClient的概念比较简单，主要是read，write及flush（发送网络请求），不管数据的意义，而SAKMascoTransport是有数据概念的，比如header，body，元数据等，将有意义的数据进行组合后，然后掉用THTTPClient的read，write等。&lt;/ttransport&gt;&lt;/ttransport&gt;&lt;/ttransport&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;- (TBinaryProtocol *)createThriftProtocol:(NSString *)serviceURLString headerParameters:(NSDictionary *)headerParameters
{
NSString *commonParameterString = [[[SAKEnvironment environment] commonParameter] queryStringEncoded];
NSString *serviceURLStringWithCommonParameter = [NSString stringWithFormat:@&amp;quot;%@?%@&amp;quot;, serviceURLString, commonParameterString];
THTTPClient *httpClient = [[THTTPClient alloc] initWithURL:[NSURL URLWithString:serviceURLStringWithCommonParameter]];
SAKMascoTransport *mascoTransport = [[SAKMascoTransport alloc] initWithTransport:httpClient andSerialID:1];

[headerParameters enumerateKeysAndObjectsUsingBlock:^(id key, id obj, BOOL *stop) {
    NSString *keyString = (NSString *)key;
    if (keyString.length) {
        [mascoTransport appendHeaderData:[keyString dataUsingEncoding:NSUTF8StringEncoding]];
    }

    // Replace user id and user token
    NSString *valueString = (NSString *)obj;
    if ([valueString isEqualToString:kUserID]) {
        valueString = [valueString stringByReplacingOccurrencesOfString:kUserID withString:(self.user ? [self.user.userID stringValue] : @&amp;quot;&amp;quot;)];
    }
    else if ([valueString isEqualToString:kUserToken]) {
        valueString = [valueString stringByReplacingOccurrencesOfString:kUserToken withString:(self.user ? self.user.token : @&amp;quot;&amp;quot;)];
    } else {
        // Do nothing
    }

    if (valueString.length) {
        [mascoTransport appendHeaderData:[valueString dataUsingEncoding:NSUTF8StringEncoding]];
    }
}];

    TBinaryProtocol *customProtocol = [[TBinaryProtocol alloc] initWithTransport:mascoTransport strictRead:NO strictWrite:YES];
    return customProtocol;
}
&lt;/code&gt;&lt;/pre&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;其实thrift和点评的nvobject蛮像的，其中，TBinaryProtocol都是二进制传输，然后将属性的字段进行压缩，较少网络传输的数据。&lt;br&gt;比如点评是采用hash值，每个对象的属性都有个hash值，然后传输此hash值，客户端根据hash值对应属性，而thrift是采用编号的方式，在idl描述文件中，就已经设置好了编号，然后传输编号到服务端，客户端根据编号对应属性。
&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;thrift -gen cocoa &lt;em&gt;**&lt;/em&gt;&lt;/strong&gt;.thrift 生成.h.m文件，然后添加工程，然后调用方法如下：**&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>JetBrains产品注册码</title>
    <link href="http://theewind.github.io/2016/04/29/JetBrains%E6%B3%A8%E5%86%8C%E7%A0%81/"/>
    <id>http://theewind.github.io/2016/04/29/JetBrains注册码/</id>
    <published>2016-04-29T08:45:47.000Z</published>
    <updated>2016-04-29T08:48:18.000Z</updated>
    
    <content type="html">&lt;p&gt;对于JetBrains系列产品，比如webStorm，appCode等，注册很简单：选择 License Servers，然后输入&lt;a href=&quot;http://idea.qinxi1992.cn，点击OK&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://idea.qinxi1992.cn，点击OK&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;参考：&lt;a href=&quot;http://idea.lanyus.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;IntelliJ IDEA 注册码&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;有条件的还是支持正版吧~~~&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;对于JetBrains系列产品，比如webStorm，appCode等，注册很简单：选择 License Servers，然后输入&lt;a href=&quot;http://idea.qinxi1992.cn，点击OK&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;h
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>代码分析脚本</title>
    <link href="http://theewind.github.io/2016/04/29/%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90%E8%84%9A%E6%9C%AC/"/>
    <id>http://theewind.github.io/2016/04/29/代码分析脚本/</id>
    <published>2016-04-29T06:40:40.000Z</published>
    <updated>2016-04-29T08:48:42.000Z</updated>
    
    <content type="html">&lt;p&gt;iOS开发过程中，随着版本迭代的更新，会有很多无用代码及文件产生，今天主要是参考网上的一些内容，并进行思路分析，给需要的人提供一个参考。&lt;/p&gt;
&lt;p&gt;主要参考&lt;a href=&quot;http://stackoverflow.com/questions/14631204/finding-unused-files-in-xcode&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Finding unused files in Xcode&lt;/a&gt; 里面有很多脚本，因为自己对shell脚本也不是很熟悉，边看边学习。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;第一个脚本&lt;a href=&quot;https://github.com/arun80/xcodeutils&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/arun80/xcodeutils&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#!/bin/sh&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#print usual html headers&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;quot;&amp;lt;html&amp;gt;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;quot;&amp;lt;h2&amp;gt; Unused resources &amp;lt;/h2&amp;gt;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#usual disclaimer&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#&amp;lt;i&amp;gt; 标签：斜体，b 粗体&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;quot;&amp;lt;i&amp;gt; &amp;lt;b&amp;gt;Note:&amp;lt;/b&amp;gt; This scans all the xib, nib files for the images available. Please look for splash screens or other images carefully in the below list which are used in the project definition (pbxproj file).&amp;lt;br&amp;gt;In order for links to work the report file must be in the same folder as project.&amp;lt;/i&amp;gt;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;unusedfiles=&amp;quot;&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#initialize the counter&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;let count=0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;let totalsize=0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# collect the files needs to be introspected&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#find命令 -o(or) 默认为 -a(and) &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;project=`find $1 -name &amp;apos;*.?ib&amp;apos; -o -name &amp;apos;*.[mh]&amp;apos; -o -name &amp;apos;*.storyboard&amp;apos;`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for i in `find $1 -name &amp;apos;*.gif&amp;apos; -o -name &amp;apos;*.jpg&amp;apos; -o -name &amp;apos;*.png&amp;apos; -o -name &amp;apos;*.jpeg&amp;apos;`; do&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;file=`basename -s .jpg &amp;quot;$i&amp;quot; | xargs basename -s .png | xargs basename -s @2x | xargs basename -s @3x`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if ! grep -q $file $project; then&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;filesize=`stat -f &amp;quot;%z&amp;quot; $i`;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;filesizekb=`echo &amp;quot;$filesize 1024.0&amp;quot; | awk &amp;apos;&amp;#123;printf &amp;quot;%.2f&amp;quot;, $1 / $2&amp;#125;&amp;apos;`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;unusedfiles=&amp;quot;$unusedfiles &amp;lt;br&amp;gt; &amp;lt;a href=\&amp;quot;$i\&amp;quot;&amp;gt;$i&amp;lt;/a&amp;gt; ($filesizekb kb)&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;let &amp;quot;count += 1&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;let &amp;quot;totalsize += $filesize&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fi&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;done&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#construct body&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;totalsizekb=`echo &amp;quot;$totalsize 1024.0&amp;quot; | awk &amp;apos;&amp;#123;printf &amp;quot;%.2f&amp;quot;, $1 / $2&amp;#125;&amp;apos;`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;quot;&amp;lt;body&amp;gt;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;quot;&amp;lt;h3&amp;gt;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;quot;There are $count unused images (total size: $totalsizekb kb)&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;quot;&amp;lt;/h3&amp;gt;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;quot;&amp;lt;pre&amp;gt;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#generate body content if there are unused files.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if [ $count &amp;gt; 0 ]; then&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo $unusedfiles;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fi&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;quot;&amp;lt;/pre&amp;gt;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#---------------------------------------------------------------------------------------&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Experimental util to find the source files which are not defined in pbxproj definition.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#---------------------------------------------------------------------------------------&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;count=0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;unusedfiles=&amp;quot;&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;project=`find $1 -name &amp;apos;*.pbxproj&amp;apos;`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for i in `find $1 -name &amp;quot;*.[hmca]&amp;quot; -o -name &amp;quot;*.cpp&amp;quot;`; do&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;file=`basename &amp;quot;$i&amp;quot;`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if ! grep -q $file $project; then&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;unusedfiles=&amp;quot;$unusedfiles &amp;lt;br&amp;gt; $i&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;let &amp;quot;count = count + 1&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fi&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;done&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;quot;&amp;lt;i&amp;gt; &amp;lt;b&amp;gt;Note:&amp;lt;/b&amp;gt; This scans all source files (*.h, *.m, *.c, *.a, *.cpp) references in all pbxproj definitions. Once it is added into project definitions, it is considered being used.&amp;lt;/i&amp;gt; &amp;lt;br&amp;gt;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;quot;&amp;lt;h3&amp;gt;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;quot;There are $count unused files&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;quot;&amp;lt;/h3&amp;gt;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;quot;&amp;lt;pre&amp;gt;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#generate body content if there are unused files.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if [ $count &amp;gt; 0 ]; then&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo $unusedfiles;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fi&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;quot;&amp;lt;/pre&amp;gt;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;quot;&amp;lt;/body&amp;gt;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;quot;&amp;lt;/html&amp;gt;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#thats it!&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;自己需要学习的脚本命令有：&lt;br&gt;&lt;a href=&quot;http://www.cnblogs.com/perfy/archive/2012/07/24/2606101.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Linux下xargs命令详解&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;xargs命令，例如：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;find /sbin -perm +700 |ls -l       这个命令是错误的&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;find /sbin -perm +700 |xargs ls -l   这样才是正确的&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;find ./ -name  *.[mh] |xargs basename&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;grep -q用于if逻辑判断&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;突然发现grep -q 用于if 逻辑判断很好用。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-q 参数，本意是 Quiet; do not write anything to standard output.  Exit immediately with zero status if any match is found, even if an error was detected.   中文意思为，安静模式，不打印任何标准输出。如果有匹配的内容则立即返回状态值0。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;小应用&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# cat a.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;nihao &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;nihaooo&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hello&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#  if  grep -q hello a.txt ; then echo yes;else echo no; fi &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;yes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# if grep -q word a.txt; then echo yes; else echo no; fi&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;no&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;stat -f &amp;quot;%z&amp;quot; README.MD 显示readme.md的大小&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-f : 显示文件所在的文件系统的状态&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;分析：此脚本首先是是扫描图片文件，jpg，png，jpeg，gif，然后从xib，nib，stroyboard，&lt;em&gt;.[mh]总查找，看是否存在，如果不存在则记录名称及大小。然后判断判断 &lt;/em&gt;.[hmca|cpp]等文件，是否在 *.pbxproj中，并输出。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;iOS开发过程中，随着版本迭代的更新，会有很多无用代码及文件产生，今天主要是参考网上的一些内容，并进行思路分析，给需要的人提供一个参考。&lt;/p&gt;
&lt;p&gt;主要参考&lt;a href=&quot;http://stackoverflow.com/questions/14631204/finding-unused-files-in-xcode&quot;&gt;Finding unused files in Xcode&lt;/a&gt; 里面有很多脚本，因为自己对shell脚本也不是很熟悉，边看边学习。&lt;/p&gt;
    
    </summary>
    
    
      <category term="脚本" scheme="http://theewind.github.io/tags/%E8%84%9A%E6%9C%AC/"/>
    
      <category term="代码检测" scheme="http://theewind.github.io/tags/%E4%BB%A3%E7%A0%81%E6%A3%80%E6%B5%8B/"/>
    
  </entry>
  
  <entry>
    <title>iOS归档之NSKeyedArchiver</title>
    <link href="http://theewind.github.io/2016/04/29/ios%E5%BD%92%E6%A1%A3%E9%9C%80%E8%A6%81%E6%B3%A8%E6%84%8F/"/>
    <id>http://theewind.github.io/2016/04/29/ios归档需要注意/</id>
    <published>2016-04-29T06:01:52.000Z</published>
    <updated>2016-04-29T06:04:42.000Z</updated>
    
    <content type="html">&lt;p&gt;如果对象是NSString、NSDictionary、NSArray、NSData、NSNumber等类型，可以直接用NSKeyedArchiver进行归档和恢复。&lt;/p&gt;
&lt;p&gt;不是所有的对象都可以直接用这种方法进行归档，只有遵守了NSCoding协议的对象才可以。&lt;/p&gt;
&lt;p&gt;NSCoding协议有2个方法：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;encodeWithCoder:
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;每次归档对象时，都会调用这个方法。一般在这个方法里面指定如何归档对象中的每个实例变量，可以使用encodeObject:forKey:方法归档实例变量&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;initWithCoder:
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;每次从文件中恢复(解码)对象时，都会调用这个方法。一般在这个方法里面指定如何解码文件中的数据为对象的实例变量，可以使用decodeObject:forKey方法解码实例变量&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;如果对象是NSString、NSDictionary、NSArray、NSData、NSNumber等类型，可以直接用NSKeyedArchiver进行归档和恢复。&lt;/p&gt;
&lt;p&gt;不是所有的对象都可以直接用这种方法进行归档，只有遵守了NSCoding协议的对象才可以。&lt;/p
    
    </summary>
    
    
      <category term="iOS" scheme="http://theewind.github.io/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>今天好兴奋</title>
    <link href="http://theewind.github.io/2016/04/28/%E4%BB%8A%E5%A4%A9%E5%A5%BD%E5%85%B4%E5%A5%8B/"/>
    <id>http://theewind.github.io/2016/04/28/今天好兴奋/</id>
    <published>2016-04-28T09:58:08.000Z</published>
    <updated>2016-04-28T09:58:45.000Z</updated>
    
    <content type="html">&lt;p&gt;###github + hexo &lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;###github + hexo &lt;/p&gt;

    
    </summary>
    
    
      <category term="随笔" scheme="http://theewind.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>hexo 基础</title>
    <link href="http://theewind.github.io/2016/04/28/hexo-study/"/>
    <id>http://theewind.github.io/2016/04/28/hexo-study/</id>
    <published>2016-04-28T09:44:20.000Z</published>
    <updated>2016-04-28T09:51:46.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;tags的用法&quot;&gt;&lt;a href=&quot;#tags的用法&quot; class=&quot;headerlink&quot; title=&quot;tags的用法&quot;&gt;&lt;/a&gt;tags的用法&lt;/h3&gt;&lt;p&gt;基本使用方法是：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;tags: hexo
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果一行多个标签，使用&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;tags: [hexo, hexo1, hexo2, ...]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果一篇文章属于多个标签&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;tags: 
- hexo
- hexo2
- hexo3
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;new-和-new-page&quot;&gt;&lt;a href=&quot;#new-和-new-page&quot; class=&quot;headerlink&quot; title=&quot;new 和 new page&quot;&gt;&lt;/a&gt;new 和 new page&lt;/h3&gt;&lt;p&gt;最终生成的静态文档都在public下&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;new: 统一在归档目录 archive下&lt;/li&gt;
&lt;li&gt;new page: 新建一个目录，比如about，然后在theme/yilia/_config.yml 的 menu下可以添加新的模块，比如 about: /about    &lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;tags的用法&quot;&gt;&lt;a href=&quot;#tags的用法&quot; class=&quot;headerlink&quot; title=&quot;tags的用法&quot;&gt;&lt;/a&gt;tags的用法&lt;/h3&gt;&lt;p&gt;基本使用方法是：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;tags: hexo
&lt;/code&gt;&lt;/pre&gt;&lt;p
    
    </summary>
    
    
      <category term="hexo" scheme="http://theewind.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>swift 学习计划</title>
    <link href="http://theewind.github.io/2016/04/28/swift/"/>
    <id>http://theewind.github.io/2016/04/28/swift/</id>
    <published>2016-04-28T09:39:06.000Z</published>
    <updated>2016-04-28T09:55:18.000Z</updated>
    
    <content type="html"></content>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="swift" scheme="http://theewind.github.io/tags/swift/"/>
    
  </entry>
  
  <entry>
    <title>Hexo 学习</title>
    <link href="http://theewind.github.io/2016/04/28/hexo-first/"/>
    <id>http://theewind.github.io/2016/04/28/hexo-first/</id>
    <published>2016-04-28T02:55:40.000Z</published>
    <updated>2016-04-28T09:57:07.000Z</updated>
    
    <content type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/writing.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Writing&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Run-server&quot;&gt;&lt;a href=&quot;#Run-server&quot; class=&quot;headerlink&quot; title=&quot;Run server&quot;&gt;&lt;/a&gt;Run server&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/server.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Server&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Generate-static-files&quot;&gt;&lt;a href=&quot;#Generate-static-files&quot; class=&quot;headerlink&quot; title=&quot;Generate static files&quot;&gt;&lt;/a&gt;Generate static files&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo generate&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/generating.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Generating&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Deploy-to-remote-sites&quot;&gt;&lt;a href=&quot;#Deploy-to-remote-sites&quot; class=&quot;headerlink&quot; title=&quot;Deploy to remote sites&quot;&gt;&lt;/a&gt;Deploy to remote sites&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo deploy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/deployment.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Deployment&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
    
    </summary>
    
    
      <category term="hexo" scheme="http://theewind.github.io/tags/hexo/"/>
    
      <category term="测试" scheme="http://theewind.github.io/tags/%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
</feed>
