<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>sanfeng’s blog</title>
  <subtitle>sanfengflying</subtitle>
  <link href="//atom.xml" rel="self"/>
  
  <link href="http://theewind.github.io/"/>
  <updated>2016-06-08T09:59:01.000Z</updated>
  <id>http://theewind.github.io/</id>
  
  <author>
    <name>sanfeng.li</name>
    <email>sanfengflying@126.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>study</title>
    <link href="http://theewind.github.io/2016/06/07/study_f8app/"/>
    <id>http://theewind.github.io/2016/06/07/study_f8app/</id>
    <published>2016-06-07T15:04:01.000Z</published>
    <updated>2016-06-08T09:59:01.000Z</updated>
    
    <content type="html">&lt;p&gt;主要是先参考如下篇文章：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;http://www.open-open.com/lib/view/open1461512056952.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.open-open.com/lib/view/open1461512056952.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第一次接触redux，概念还比较模糊，同时js开发水平也一般，对一些语法学习还不是很懂，这里做个记录：&lt;br&gt;代码中的很多function func(): type的用法，我之前接触的基本都是无返回值类型的，这里添加一个 &lt;code&gt;:Action&lt;/code&gt;类型，貌似就是确定了返回值类型的，不知道理解的对不对。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/* from js/actions/filter.js */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;function applyTopicsFilter(topics): Action &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  return &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    type: &amp;apos;APPLY_TOPICS_FILTER&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    topics,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;redux的这个流程图不错&lt;br&gt;&lt;img src=&quot;http://static.open-open.com/lib/uploadImg/20160424/20160424233655_731.png&quot; alt=&quot;组件&quot;&gt;&lt;/p&gt;
&lt;p&gt;越看越不懂，任重而道远&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;主要是先参考如下篇文章：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;http://www.open-open.com/lib/view/open1461512056952.html&quot;&gt;http://www.open-open.com/lib/view/open1461512056952.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第一次接触redux，概念还比较模糊，同时js开发水平也一般，对一些语法学习还不是很懂，这里做个记录：&lt;br&gt;代码中的很多function func(): type的用法，我之前接触的基本都是无返回值类型的，这里添加一个 &lt;code&gt;:Action&lt;/code&gt;类型，貌似就是确定了返回值类型的，不知道理解的对不对。&lt;/p&gt;
    
    </summary>
    
    
      <category term="React Native" scheme="http://theewind.github.io/tags/React-Native/"/>
    
  </entry>
  
  <entry>
    <title>rac_willDeallocSignal的加载时机</title>
    <link href="http://theewind.github.io/2016/06/06/rac-willDeallocSignal/"/>
    <id>http://theewind.github.io/2016/06/06/rac-willDeallocSignal/</id>
    <published>2016-06-06T06:46:23.000Z</published>
    <updated>2016-06-06T07:20:08.000Z</updated>
    
    <content type="html">&lt;p&gt;今天看了下RAC的rac_willDeallocSignal的方法实现。我最初的猜测是NSObject (RACDeallocating)添加load方法，然后在里面进行method swzziling，添加dealloc方法，但是发现源码不是这样的。他只是通过常用的category 添加 associated 来进行的。先看他的简单实现：&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (RACSignal *)rac_willDeallocSignal &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	RACSignal *signal = objc_getAssociatedObject(self, _cmd);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	if (signal != nil) return signal;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	RACReplaySubject *subject = [RACReplaySubject subject];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	[self.rac_deallocDisposable addDisposable:[RACDisposable disposableWithBlock:^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		[subject sendCompleted];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;]];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	objc_setAssociatedObject(self, _cmd, subject, OBJC_ASSOCIATION_RETAIN);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	return subject;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;每次我们调用一个object的rac_willDeallocSignal，先判断这个是否已经添加过了rac_willDeallocSignal的_cmd对应的关联对象，如果添加了就直接返回，如果没有添加，则生成一个subject，然后调用self.rac_deallocDisposable，在这个里面进行方法替换，如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (RACCompoundDisposable *)rac_deallocDisposable &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	@synchronized (self) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		RACCompoundDisposable *compoundDisposable = objc_getAssociatedObject(self, RACObjectCompoundDisposable);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		if (compoundDisposable != nil) return compoundDisposable;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		swizzleDeallocIfNeeded(self.class);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		compoundDisposable = [RACCompoundDisposable compoundDisposable];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		objc_setAssociatedObject(self, RACObjectCompoundDisposable, compoundDisposable, OBJC_ASSOCIATION_RETAIN_NONATOMIC);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		return compoundDisposable;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;里面的重点是swizzleDeallocIfNeeded方法。如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;static NSMutableSet *swizzledClasses() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	static dispatch_once_t onceToken;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	static NSMutableSet *swizzledClasses = nil;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	dispatch_once(&amp;amp;onceToken, ^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		swizzledClasses = [[NSMutableSet alloc] init];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	return swizzledClasses;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;static void swizzleDeallocIfNeeded(Class classToSwizzle) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	@synchronized (swizzledClasses()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		NSString *className = NSStringFromClass(classToSwizzle);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		if ([swizzledClasses() containsObject:className]) return;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		SEL deallocSelector = sel_registerName(&amp;quot;dealloc&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		__block void (*originalDealloc)(__unsafe_unretained id, SEL) = NULL;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		id newDealloc = ^(__unsafe_unretained id self) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			RACCompoundDisposable *compoundDisposable = objc_getAssociatedObject(self, RACObjectCompoundDisposable);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			[compoundDisposable dispose];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			if (originalDealloc == NULL) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				struct objc_super superInfo = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					.receiver = self,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					.super_class = class_getSuperclass(classToSwizzle)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				void (*msgSend)(struct objc_super *, SEL) = (__typeof__(msgSend))objc_msgSendSuper;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				msgSend(&amp;amp;superInfo, deallocSelector);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125; else &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				originalDealloc(self, deallocSelector);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		IMP newDeallocIMP = imp_implementationWithBlock(newDealloc);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		if (!class_addMethod(classToSwizzle, deallocSelector, newDeallocIMP, &amp;quot;v@:&amp;quot;)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			// The class already contains a method implementation.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			Method deallocMethod = class_getInstanceMethod(classToSwizzle, deallocSelector);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			// We need to store original implementation before setting new implementation&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			// in case method is called at the time of setting.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			originalDealloc = (__typeof__(originalDealloc))method_getImplementation(deallocMethod);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			// We need to store original implementation again, in case it just changed.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			originalDealloc = (__typeof__(originalDealloc))method_setImplementation(deallocMethod, newDeallocIMP);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		[swizzledClasses() addObject:className];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;此swizziling方法，跟我们平时常用的写法不一致，但是总体思路都是通过runtime进行替换。&lt;/p&gt;
&lt;p&gt;###总结&lt;br&gt;通过这样的形式，可以达到动态配置swizzling method的形式，如果采用+load()方法，那么进行替换的方法，不管有没有用都会执行，其实算是一种强制替换，而通过associated的形式，可以达到懒替换的效果，只在你调用的时候才进行替换，使用更方便。&lt;/p&gt;
&lt;p&gt;###后记&lt;br&gt;对某个类的方法进行监控，可以通过method swizzling的方式，也可以采用RAC的方法，比如对NSNotificationCenter进行监控，也可以通过如下方法&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;self.addObserverDisposable = [[center rac_signalForSelector:@selector(addObserver:selector:name:object:)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; subscribeNext:^(RACTuple *args) &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     self.removeNotificationsDisposable = [[center rac_signalForSelector:@selector(removeObserver:)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; subscribeNext:^(RACTuple *args) &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;self.removeSingleNotificationDisposable = [[center rac_signalForSelector:@selector(removeObserver:name:object:)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; subscribeNext:^(RACTuple *args) &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;通过RAC的方式，监控某个方法，只需要在某个必执行的方法里面调用监控就可以了，当被调用的方法发现被掉哦那个，就会执行自己的{}方法。&lt;br&gt;至于他是如何执行，可以参考他的实现及解释。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;今天看了下RAC的rac_willDeallocSignal的方法实现。我最初的猜测是NSObject (RACDeallocating)添加load方法，然后在里面进行method swzziling，添加dealloc方法，但是发现源码不是这样的。他只是通过常用的category 添加 associated 来进行的。先看他的简单实现：&lt;/p&gt;
    
    </summary>
    
    
      <category term="RAC" scheme="http://theewind.github.io/tags/RAC/"/>
    
  </entry>
  
  <entry>
    <title>React Native 双listView交互动画</title>
    <link href="http://theewind.github.io/2016/06/03/doubleListViewDemo/"/>
    <id>http://theewind.github.io/2016/06/03/doubleListViewDemo/</id>
    <published>2016-06-03T03:41:01.000Z</published>
    <updated>2016-06-08T09:47:11.000Z</updated>
    
    <content type="html">&lt;p&gt;此demo算是自己学习React Natvie的一个小例子的。&lt;img src=&quot;../img/doubleListViewdemo.gif&quot; alt=&quot;效果如下&quot;&gt;&lt;/p&gt;
&lt;p&gt;因为开发过程中，经常需要使用两个ListView进行交互，具体实现参考&lt;a href=&quot;https://github.com/theewind/RCTDoubleListViewDemo&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;DEMO&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;可以通过点击左边的菜品分类，切换到对应的section中，也可以通过滑动右边的菜品，同步更新到左边的分类。&lt;br&gt;主要思路是：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;componentDidUpdate() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  let scrollResponder = this.refs.listView.getScrollResponder();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  scrollResponder.scrollResponderScrollTo(&amp;#123;x: 0, y:this.pscroll(), animated: true&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;shouldComponentUpdate(nextProps, nextState) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  return nextProps.needUpdate;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pscroll() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  console.log(this.props.section);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   var height = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   for (var x in spuMenuItemList) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     if (parseInt(x) &amp;lt; parseInt(this.props.section)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       height += spuMenuItemList[x].length * 100;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       height += 20;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   return height;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  _onScroll(event: Object) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var scrollProperties = this.refs.listView.scrollProperties;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // console.log(scrollProperties);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // console.log(scrollProperties.offset);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // console.log(this.props.section)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (this.props.fromLeftTouched) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      return;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var height = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    for (var x in spuMenuItemList) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      height += spuMenuItemList[x].length * 100;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      height += 20;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      if (height &amp;gt; scrollProperties.offset) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (x != this.state.currentIndex) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          this.props.needChangeSection(parseInt(x));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          this.state.currentIndex = parseInt(x);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        break;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;此demo算是自己学习React Natvie的一个小例子的。&lt;img src=&quot;../img/doubleListViewdemo.gif&quot; alt=&quot;效果如下&quot;&gt;&lt;/p&gt;
&lt;p&gt;因为开发过程中，经常需要使用两个ListView进行交互，具体实现参考&lt;a href=&quot;ht
    
    </summary>
    
    
      <category term="react native" scheme="http://theewind.github.io/tags/react-native/"/>
    
  </entry>
  
  <entry>
    <title>React Native学习笔记</title>
    <link href="http://theewind.github.io/2016/05/26/ReactNative%20%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://theewind.github.io/2016/05/26/ReactNative 学习笔记/</id>
    <published>2016-05-26T06:36:44.000Z</published>
    <updated>2016-06-01T07:22:23.000Z</updated>
    
    <content type="html">&lt;p&gt;在学习react Native的过程中，对一些知识的记录，不定期更新。。。&lt;/p&gt;
&lt;h2 id=&quot;1-React-里直接修改-this-state-和调用-setState-修改-state-的值有什么区别？&quot;&gt;&lt;a href=&quot;#1-React-里直接修改-this-state-和调用-setState-修改-state-的值有什么区别？&quot; class=&quot;headerlink&quot; title=&quot;1. React 里直接修改 this.state 和调用 setState() 修改 state 的值有什么区别？&quot;&gt;&lt;/a&gt;1. React 里直接修改 this.state 和调用 setState() 修改 state 的值有什么区别？&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://segmentfault.com/q/1010000002958584&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://segmentfault.com/q/1010000002958584&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;使用对this.state赋值并没有什么作用，官方提醒，应该把this.state当成不可变变量。&lt;br&gt;而使用this.setState方法，会触发异步修改状态，状态改变的同时，会重新执行一次willUpdate，render等流程。需要注意的是，避免在执行完this.setState后马上读取this.state，此操作并不会获得最新修改的状态。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;blockquote&gt;
&lt;p&gt;Notes:&lt;br&gt;NEVER mutate this.state directly, as calling setState() afterwards may replace the mutation you made. Treat this.state as if it were immutable.&lt;br&gt;setState() does not immediately mutate this.state but creates a pending state transition. Accessing this.state after calling this method can potentially return the existing value.&lt;br&gt;There is no guarantee of synchronous operation of calls to setState and calls may be batched for performance gains.&lt;br&gt;setState() will always trigger a re-render unless conditional rendering logic is implemented in shouldComponentUpdate(). If mutable objects are being used and the logic cannot be implemented in shouldComponentUpdate(), calling setState() only when the new state differs from the previous state will avoid unnecessary re-renders.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;2-react-native-vector-icons&quot;&gt;&lt;a href=&quot;#2-react-native-vector-icons&quot; class=&quot;headerlink&quot; title=&quot;2. react-native-vector-icons&quot;&gt;&lt;/a&gt;2. react-native-vector-icons&lt;/h2&gt;&lt;p&gt;react-native-icons 是 React Native 简单易用的图标组件。&lt;/p&gt;
&lt;p&gt;当前支持 4 种字体：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;FontAwesome 4.2 Contains 479 icons&lt;/li&gt;
&lt;li&gt;ionicons 2.0.0 Contains 733 icons, lots of iOS 7 style outlined icons.&lt;/li&gt;
&lt;li&gt;Foundation icons Contains 283 icons.&lt;/li&gt;
&lt;li&gt;Zocial Contains 99 social icons.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;因为在RN中没有Button，可以采用react-native-vector-icons替换，包括TabBarItem等。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;import FontAwesome from &amp;apos;react-naitive-vector-icons/FontAwesome&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;FontAwesome.TabBarItem&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	key = &amp;#123;i&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	title = &amp;#123;controller.title&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	selected = &amp;#123;this.state.selectedTab === controller.title&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	iconName = &amp;#123;controller.icon&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	onPress = &amp;#123;() =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		this.setState(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			selectedTab: controller.title&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;Component navigator = &amp;#123;this.props.navigator&amp;#125; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/FontAwesome.TabBarItem&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;import Icon from &amp;apos;react-native-vector-icons/Ionicons&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;function TabBarView(props) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  return (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;TabBarIOS&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;Icon.TabBarItem&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        title=&amp;quot;Home&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        iconName=&amp;quot;ios-home-outline&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        selectedIconName=&amp;quot;ios-home&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;View style=&amp;#123;styles.tabContent&amp;#125;&amp;gt;&amp;lt;Text&amp;gt;Home Tab&amp;lt;/Text&amp;gt;&amp;lt;/View&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;/Icon.TabBarItem&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;/TabBarIOS&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;3-cloneWithRows&quot;&gt;&lt;a href=&quot;#3-cloneWithRows&quot; class=&quot;headerlink&quot; title=&quot;3. cloneWithRows&quot;&gt;&lt;/a&gt;3. cloneWithRows&lt;/h2&gt;&lt;p&gt;一般我们都是这样写ListViewDataSource的&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;let ds = new ListView.DataSource(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  rowHasChanged: (r1, r2) =&amp;gt; r1 !== r2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;this.state = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  dataSource: ds.cloneWithRows(menuCategroys),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;而不是这样：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;this.state = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    dataSource: new ListView.DataSource(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        rowHasChanged: (row1, row2) =&amp;gt; row1 !== row2,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;主要是因为，cloneWithRows不仅仅是赋值数据，还会有一些对比操作，判断里面的rowdata是否有更新等操作。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/29351259/how-to-add-delete-item-into-listview&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;How to add/Delete item into ListView?&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;4-onLayout方法&quot;&gt;&lt;a href=&quot;#4-onLayout方法&quot; class=&quot;headerlink&quot; title=&quot;4. onLayout方法&quot;&gt;&lt;/a&gt;4. onLayout方法&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;onLayout&lt;/strong&gt; &lt;em&gt;function&lt;/em&gt; &lt;/p&gt;
&lt;p&gt;当组件挂载或者布局变化的时候调用，参数为：&lt;/p&gt;
&lt;p&gt;{nativeEvent: { layout: {x, y, width, height}}}&lt;/p&gt;
&lt;p&gt;这个事件会在布局计算完成后立即调用一次，不过收到此事件时新的布局可能还没有在屏幕上呈现，尤其是一个布局动画正在进行中的时候。    &lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;onLayout=&amp;#123;(event) =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          var layout = event.nativeEvent.layout;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          this.setState(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              listHeight : layout.height&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;对于ListView来说，滑动的过程中不会重新调用onLayout，所以这里的listHeight始终不变，不能用来监控滑动。&lt;/p&gt;
&lt;h2 id=&quot;5-this-setState&quot;&gt;&lt;a href=&quot;#5-this-setState&quot; class=&quot;headerlink&quot; title=&quot;5. this.setState&quot;&gt;&lt;/a&gt;5. this.setState&lt;/h2&gt;&lt;p&gt;this.setState设置一个参数形式如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;CategoryMenu&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    key=&amp;#123;&amp;apos;category_menu&amp;apos;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    categories=&amp;#123;this.state.newsCategories&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    fetchNewsList=&amp;#123;(category) =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        this.setState(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            currentCategory: category,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            isRefreshing: true,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &amp;#125;,  function() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            this._fetchNewsList();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在CategoryMenu中传入key（默认的props属性），categories获取的分类，已经方法fetchNewsList，而fetchNewList方法主要是更新自身的state，并发送请求，更新state属性，并调用某个方法。因为上述要点1中说过，setState并不会立即生效，调用this.state可能还是就的数据，既可以通过这种方式立即出发自己的某些操作。比如此处的_fetchNewsList，如果currentCategory没有生效，可以把catetory当做参数传递过去。&lt;/p&gt;
&lt;h2 id=&quot;6-render方法如何根据条件进行渲染&quot;&gt;&lt;a href=&quot;#6-render方法如何根据条件进行渲染&quot; class=&quot;headerlink&quot; title=&quot;6. render方法如何根据条件进行渲染&quot;&gt;&lt;/a&gt;6. render方法如何根据条件进行渲染&lt;/h2&gt;&lt;p&gt;在render（）方法里面，经常遇到的就是根据条件进行渲染，特别是对于彼此之间有显示隐藏逻辑，这时候如果把所有view都绘制出来，然后布局，显然比较复杂，这时就可以采用分条件布局的方式。简单说就是先声明一个数组，然后根据各种逻辑，进行push操作，把各种view push进之前的数组中，最后，渲染那个view的数组就可以了。&lt;br&gt;例如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;        let NavigationBar = [];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // 左边图片按钮&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (this.props.leftIcon != undefined) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            NavigationBar.push(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;lt;TouchableOpacity&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    key=&amp;#123;&amp;apos;leftIcon&amp;apos;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    activeOpacity=&amp;#123;0.75&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    style=&amp;#123;styles.leftIcon&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    onPress=&amp;#123;this.props.leftTouchAction&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;lt;Icon color=&amp;quot;white&amp;quot; size=&amp;#123;30&amp;#125; name=&amp;#123;this.props.leftIcon&amp;#125;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;lt;/TouchableOpacity&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // 标题&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (this.props.title != undefined) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            NavigationBar.push(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;lt;Text key=&amp;#123;&amp;apos;title&amp;apos;&amp;#125; style=&amp;#123;styles.title&amp;#125;&amp;gt;&amp;#123;this.props.title&amp;#125;&amp;lt;/Text&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // 自定义标题View&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (this.props.titleView != undefined) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            let Component = this.props.titleView;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            NavigationBar.push(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;lt;Component key=&amp;#123;&amp;apos;titleView&amp;apos;&amp;#125; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // 右边图片按钮&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (this.props.rightIcon != undefined) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            NavigationBar.push(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;lt;TouchableOpacity&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    key=&amp;#123;&amp;apos;rightIcon&amp;apos;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    activeOpacity=&amp;#123;0.75&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    style=&amp;#123;styles.rightIcon&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    onPress=&amp;#123;this.props.rightTouchAction&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;lt;Icon color=&amp;quot;white&amp;quot; size=&amp;#123;30&amp;#125; name=&amp;#123;this.props.rightIcon&amp;#125;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;lt;/TouchableOpacity&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // 右边文字按钮&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (this.props.rightButton != undefined) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            NavigationBar.push(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;lt;TouchableOpacity&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    key=&amp;#123;&amp;apos;rightButton&amp;apos;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    activeOpacity=&amp;#123;0.75&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    style=&amp;#123;styles.rightButton&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    onPress=&amp;#123;this.props.rightButtonAction&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;lt;Text style=&amp;#123;styles.buttonTitleFont&amp;#125;&amp;gt;&amp;#123;this.props.rightButton&amp;#125;&amp;lt;/Text&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;lt;/TouchableOpacity&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;lt;View style=&amp;#123;styles.header&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;lt;View style=&amp;#123;styles.navigationBarContainer&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;#123;NavigationBar&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;lt;/View&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;lt;/View&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;根据条件进行push操作，得到一个渲染列表。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;还有一种方式是通过，匿名函数的方式，返回一个个的view，如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;const secondLine = (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;View style = &amp;#123;styles.secondLineView&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;(()=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          if (spu.recomCount &amp;gt; 0) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &amp;lt;View style style = &amp;#123;styles.rowView&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;lt;Image source=&amp;#123;require(&amp;apos;../../../asset/od_icon_smallzan.png&amp;apos;)&amp;#125; style = &amp;#123;styles.imageLike&amp;#125;&amp;gt;&amp;lt;/Image&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;lt;Text style = &amp;#123;[styles.detailText,styles.liketext]&amp;#125;&amp;gt;&amp;#123;spu.recomCount&amp;#125;&amp;lt;/Text&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &amp;lt;/View&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;)()&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;(()=&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          if (spu.dishSales &amp;amp;&amp;amp; spu.dishSales.length &amp;gt; 0) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &amp;lt;View&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;lt;Text style = &amp;#123;styles.detailText&amp;#125;&amp;gt;&amp;#123;spu.dishSales&amp;#125;&amp;lt;/Text&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &amp;lt;/View&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;)()&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;/View&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    );&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;7-字体使用：ionIcons-amp-AwesomeFont&quot;&gt;&lt;a href=&quot;#7-字体使用：ionIcons-amp-AwesomeFont&quot; class=&quot;headerlink&quot; title=&quot;7. 字体使用：ionIcons &amp;amp; AwesomeFont&quot;&gt;&lt;/a&gt;7. 字体使用：ionIcons &amp;amp; AwesomeFont&lt;/h2&gt;&lt;p&gt;ionicons 包含超过 430 个免费漂亮的程序图标。该图标集采用 MIT 许可证，你可在商业应用中使用。它和AwesomeFont的字体就是矢量图,无论是放大还是缩小都不失真的矢量图哦。不仅是在ReactNative中使用，即使是iOS native开发中，也可以使用的。&lt;br&gt;可以导入FontAwesomeKit框架。更高级的方式，是把字体转换成路径，然后就可以执行各种CoreAnimation的动画了。&lt;a href=&quot;http://www.tuicool.com/articles/2MJNZn&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;参考动画&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;而在使用的过程中，只要导入：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;import Icon from &amp;apos;react-native-vector-icons/Ionicons&amp;apos;;
import IconFA from &amp;apos;react-native-vector-icons/FontAwesome&amp;apos;;
然后自己定义属性：
{
    key:28,
    title:&amp;quot;iMessage image picker&amp;quot;,
    component: Day29,
    isFA: false,
    icon: &amp;quot;navicon-round&amp;quot;,
    size:50,
    color:&amp;quot;#48f52e&amp;quot;,
    hideNav: false,
  },{
    key:29,
    title:&amp;quot;Push Notifications&amp;quot;,
    component: Day30,
    isFA: false,
    icon: &amp;quot;android-notifications&amp;quot;,
    size:50,
    color:&amp;quot;#f27405&amp;quot;,
    hideNav: false,
  }]

  render方法里面调用：
  {elem.isFA? &amp;lt;IconFA size={elem.size} name={elem.icon} style={[styles.boxIcon,{color:elem.color}]}&amp;gt;&amp;lt;/IconFA&amp;gt;:
          &amp;lt;Icon size={elem.size} name={elem.icon} style={[styles.boxIcon,{color:elem.color}]}&amp;gt;&amp;lt;/Icon&amp;gt;}
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;8-如何从listView中获取scrollView的属性&quot;&gt;&lt;a href=&quot;#8-如何从listView中获取scrollView的属性&quot; class=&quot;headerlink&quot; title=&quot;8. 如何从listView中获取scrollView的属性&quot;&gt;&lt;/a&gt;8. 如何从listView中获取scrollView的属性&lt;/h2&gt;&lt;p&gt;需要定义ref&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;ListView&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ref=&amp;quot;listView&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        dataSource=&amp;#123;this.state.dataSource&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        renderRow=&amp;#123;this._renderRow&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        onScroll=&amp;#123;this.handleScroll&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;/View&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;      var scrollProperties = this.refs.listView.scrollProperties;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      console.log(scrollProperties);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      console.log(scrollProperties.offset);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      手动滚动到某处&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;componentDidUpdate() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    let scrollResponder = this.refs.listView.getScrollResponder();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    scrollResponder.scrollResponderScrollTo(&amp;#123;x: 0, y:this.pscroll(), animated: true&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;通过scrollProperties，然后就可以获取offset了。&lt;br&gt;还有一种方式是通过：event.nativeEvent.contentOffset.y获得。参考&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;handleScroll: function(event: Object) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (event.nativeEvent.contentOffset.y &amp;lt; -110) &amp;#123; // pull-down&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        this.setState(&amp;#123;isLoading: true&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        var filter = this.props.filter || this.state.filter;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // reduce dup fetches&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        this.clearTimeout(this.timeoutID);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        this.timeoutID = this.setTimeout(() =&amp;gt; this.fetchVideos(filter), 250);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;在学习react Native的过程中，对一些知识的记录，不定期更新。。。&lt;/p&gt;
&lt;h2 id=&quot;1-React-里直接修改-this-state-和调用-setState-修改-state-的值有什么区别？&quot;&gt;&lt;a href=&quot;#1-React-里直接修改-this-state-和调用-setState-修改-state-的值有什么区别？&quot; class=&quot;headerlink&quot; title=&quot;1. React 里直接修改 this.state 和调用 setState() 修改 state 的值有什么区别？&quot;&gt;&lt;/a&gt;1. React 里直接修改 this.state 和调用 setState() 修改 state 的值有什么区别？&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://segmentfault.com/q/1010000002958584&quot;&gt;https://segmentfault.com/q/1010000002958584&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;使用对this.state赋值并没有什么作用，官方提醒，应该把this.state当成不可变变量。&lt;br&gt;而使用this.setState方法，会触发异步修改状态，状态改变的同时，会重新执行一次willUpdate，render等流程。需要注意的是，避免在执行完this.setState后马上读取this.state，此操作并不会获得最新修改的状态。&lt;/p&gt;
    
    </summary>
    
    
      <category term="React Native" scheme="http://theewind.github.io/tags/React-Native/"/>
    
  </entry>
  
  <entry>
    <title>iOS下载内容保存在document中需要设置不同步</title>
    <link href="http://theewind.github.io/2016/05/26/iOS%E4%B8%8B%E8%BD%BD%E5%86%85%E5%AE%B9%E4%BF%9D%E5%AD%98%E5%9C%A8document%E4%B8%AD%E9%9C%80%E8%A6%81%E8%AE%BE%E7%BD%AE%E4%B8%8D%E5%90%8C%E6%AD%A5/"/>
    <id>http://theewind.github.io/2016/05/26/iOS下载内容保存在document中需要设置不同步/</id>
    <published>2016-05-26T03:26:03.000Z</published>
    <updated>2016-05-26T03:29:34.000Z</updated>
    
    <content type="html">&lt;p&gt;之前因为在document，保存了下载数据，导致app审核不通过。这个苹果是严格要求，网络下载的数据一般是不能保存在document目录中，建议是保存在cache中，如果真的需要保存在document中，就需要对保存的内容设置不同步标识。具体代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (BOOL)addSkipBackupAttributeToItemAtURL:(NSURL *)URL&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (![[NSFileManager defaultManager] fileExistsAtPath:[URL path]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return NO;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    BOOL success = NO;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    NSError *error = nil;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    success = [URL setResourceValue:[NSNumber numberWithBool: YES]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                             forKey:NSURLIsExcludedFromBackupKey error: &amp;amp;error];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return success;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;之前因为在document，保存了下载数据，导致app审核不通过。这个苹果是严格要求，网络下载的数据一般是不能保存在document目录中，建议是保存在cache中，如果真的需要保存在document中，就需要对保存的内容设置不同步标识。具体代码如下：&lt;/p&gt;
&lt;figur
    
    </summary>
    
    
      <category term="iOS" scheme="http://theewind.github.io/tags/iOS/"/>
    
      <category term="缓存" scheme="http://theewind.github.io/tags/%E7%BC%93%E5%AD%98/"/>
    
  </entry>
  
  <entry>
    <title>iOS横屏应用旋转无动画</title>
    <link href="http://theewind.github.io/2016/05/14/iOS%E6%A8%AA%E5%B1%8F%E5%BA%94%E7%94%A8%E6%97%8B%E8%BD%AC%E6%97%A0%E5%8A%A8%E7%94%BB/"/>
    <id>http://theewind.github.io/2016/05/14/iOS横屏应用旋转无动画/</id>
    <published>2016-05-14T06:43:33.000Z</published>
    <updated>2016-05-14T06:56:10.000Z</updated>
    
    <content type="html">&lt;p&gt;最近开发一个仅支持横屏的应用，发现进行180°旋转的时候没有动画，Google也没有找到有用的信息，显示的情况跟下面链接中的比较像&lt;a href=&quot;http://stackoverflow.com/questions/32848456/ios-9-orientation-auto-rotation-animation-not-working-but-always-on-main-thread/37222383#37222383&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;无动画效果&lt;/a&gt;. 最后在苹果的官网资料上找到了灵感：&lt;a href=&quot;https://developer.apple.com/library/ios/technotes/tn2244/_index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://developer.apple.com/library/ios/technotes/tn2244/_index.html&lt;/a&gt;&lt;br&gt;自己就是根据这个里面的内容，全部进行了操作，最后发现是LaunchScreen.stroyboard的问题，在&lt;br&gt;&lt;img src=&quot;http://7xthb9.com1.z0.glb.clouddn.com/launchScreen.png&quot; alt=&quot;设置&quot;&gt; 中对Main Interface 和 Launch Screen File都设置成了空，将Launch Images Source 另外指定了图片，然后就解决了此问题。&lt;/p&gt;
&lt;p&gt;我的解决方案不一定完全使用所有的情况，这里仅仅是做一个记录，有需要的可以试一下。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;最近开发一个仅支持横屏的应用，发现进行180°旋转的时候没有动画，Google也没有找到有用的信息，显示的情况跟下面链接中的比较像&lt;a href=&quot;http://stackoverflow.com/questions/32848456/ios-9-orientation-a
    
    </summary>
    
    
      <category term="iOS" scheme="http://theewind.github.io/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>命令行解释括号说明</title>
    <link href="http://theewind.github.io/2016/05/03/%E5%91%BD%E4%BB%A4%E8%A1%8C%E8%A7%A3%E9%87%8A%E6%8B%AC%E5%8F%B7%E8%AF%B4%E6%98%8E/"/>
    <id>http://theewind.github.io/2016/05/03/命令行解释括号说明/</id>
    <published>2016-05-03T07:37:24.000Z</published>
    <updated>2016-05-03T07:46:35.000Z</updated>
    
    <content type="html">&lt;p&gt;命令行解释括号的作用：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;表示法&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;不带方括号或大括号的文本&lt;/td&gt;
&lt;td&gt;您必须键入如下所示的项目&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;lt;尖括号内的文本&amp;gt;&lt;/td&gt;
&lt;td&gt;您必须为其提供的占位符&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;[方括号内的文本]&lt;/td&gt;
&lt;td&gt;可选的项目&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;{大括号内的文本}&lt;/td&gt;
&lt;td&gt;一组所需的项目，选择一个&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;竖线（\&lt;/td&gt;
&lt;td&gt;）&lt;/td&gt;
&lt;td&gt;互斥项&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;比如&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git [--version] [--help] [-C &amp;lt;path&amp;gt;] [-c name=value]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           [--exec-path[=&amp;lt;path&amp;gt;]] [--html-path] [--man-path] [--info-path]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           [-p | --paginate | --no-pager] [--no-replace-objects] [--bare]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           [--git-dir=&amp;lt;path&amp;gt;] [--work-tree=&amp;lt;path&amp;gt;] [--namespace=&amp;lt;name&amp;gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &amp;lt;command&amp;gt; [&amp;lt;args&amp;gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NAME&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       git-checkout - Switch branches or restore working tree files&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SYNOPSIS&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       git checkout [-q] [-f] [-m] [&amp;lt;branch&amp;gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       git checkout [-q] [-f] [-m] --detach [&amp;lt;branch&amp;gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       git checkout [-q] [-f] [-m] [--detach] &amp;lt;commit&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       git checkout [-q] [-f] [-m] [[-b|-B|--orphan] &amp;lt;new_branch&amp;gt;] [&amp;lt;start_point&amp;gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       git checkout [-f|--ours|--theirs|-m|--conflict=&amp;lt;style&amp;gt;] [&amp;lt;tree-ish&amp;gt;] [--] &amp;lt;paths&amp;gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       git checkout [-p|--patch] [&amp;lt;tree-ish&amp;gt;] [--] [&amp;lt;paths&amp;gt;...]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;命令行解释括号的作用：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;表示法&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;不带方括号或大括号的文本&lt;/td&gt;
&lt;td&gt;您必须键入如下所示的项目&lt;/td&gt;
&lt;td
    
    </summary>
    
    
      <category term="shell" scheme="http://theewind.github.io/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>shell命令学习</title>
    <link href="http://theewind.github.io/2016/05/03/shell%E5%91%BD%E4%BB%A4%E5%AD%A6%E4%B9%A0/"/>
    <id>http://theewind.github.io/2016/05/03/shell命令学习/</id>
    <published>2016-05-03T06:49:51.000Z</published>
    <updated>2016-05-03T07:35:43.000Z</updated>
    
    <content type="html">&lt;p&gt;提交Jenkins的时候，会用到部分命令：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;df -h&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Filesystem      Size   Used  Avail Capacity  iused   ifree %iused  Mounted on&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/dev/disk1     233Gi  199Gi   33Gi    86% 52321616 8659602   86%   /&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;devfs          187Ki  187Ki    0Bi   100%      648       0  100%   /dev&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;map -hosts       0Bi    0Bi    0Bi   100%        0       0  100%   /net&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;map auto_home    0Bi    0Bi    0Bi   100%        0       0  100%   /home&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;em&gt;df 命令：&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;linux中df命令的功能是用来检查linux服务器的文件系统的磁盘空间占用情况。可以利用该命令来获取硬盘被占用了多少空间，目前还剩下多少空间等信息。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;em&gt;date命令&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;修改linux的时间可以使用date指令 &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;date&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Tue May  3 14:53:22 CST 2016&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;➜  _posts git:(master) ✗ date &amp;apos;+Current time: %H:%M:%S&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Current time: 14:53:24 //可见这里会自定义输出date的格式&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;修改日期： &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;时间设定成2009年5月10日的命令如下：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;date -s 05/10/2009 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;修改时间： &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;将系统时间设定成上午10点18分0秒的命令如下。 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;date -s 10:18:00&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;git命令**&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;git branch newBranch   创建新分支 git br &lt;/p&gt;
&lt;p&gt;git checkout newBranch    切换到新分支 git co&lt;/p&gt;
&lt;p&gt;合并： git checkout -b newBranch&lt;br&gt;简写： git co -b newBranch&lt;/p&gt;
&lt;p&gt;git br nnew [commit] 以某次commit创建分支&lt;/p&gt;
&lt;p&gt;git checkout -B &lt;branch&gt;&lt;/branch&gt;&lt;/p&gt;
&lt;p&gt;这个命令，可以强制创建新的分支，为什么加-B呢？如果当前仓库中，已经存在一个跟你新建分支同名的分支，那么使用普通的git checkout -b &lt;branch&gt;这个命令，是会报错的，且同名分支无法创建。如果使用-B参数，那么就可以强制创建新的分支，并会覆盖掉原来的分支。&lt;/branch&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;提交Jenkins的时候，会用到部分命令：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;
    
    </summary>
    
    
      <category term="shell" scheme="http://theewind.github.io/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>thrift学习</title>
    <link href="http://theewind.github.io/2016/04/29/thrift-study/"/>
    <id>http://theewind.github.io/2016/04/29/thrift-study/</id>
    <published>2016-04-29T09:44:20.000Z</published>
    <updated>2016-04-28T09:58:58.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;strong&gt;其实thrift和点评的nvobject蛮像的，其中，TBinaryProtocol都是二进制传输，然后将属性的字段进行压缩，较少网络传输的数据。&lt;br&gt;比如点评是采用hash值，每个对象的属性都有个hash值，然后传输此hash值，客户端根据hash值对应属性，而thrift是采用编号的方式，在idl描述文件中，就已经设置好了编号，然后传输编号到服务端，客户端根据编号对应属性。
&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;thrift -gen cocoa &lt;em&gt;**&lt;/em&gt;&lt;/strong&gt;.thrift 生成.h.m文件，然后添加工程，然后调用方法如下：**&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;##例如：&lt;br&gt;METMemberCardServiceClient是最终发送请求的类，而他依赖TBinaryProtocol&lt;tportocol&gt;&lt;/tportocol&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;- (void)getDisplayTypefinished:(void(^)(METMineMembercardExhibitionType result, SAKError *error))finished
{
NSDictionary *headerParams = @{@&amp;quot;token&amp;quot; : kUserToken, @&amp;quot;userId&amp;quot; : kUserID, @&amp;quot;clientKey&amp;quot; :  @&amp;quot;group&amp;quot;};
TBinaryProtocol *binaryProtocol = [self createThriftProtocol:kMemberCardServiceURLString headerParameters:headerParams];
METMemberCardServiceClient *memberCardService = [[METMemberCardServiceClient alloc] initWithProtocol:binaryProtocol];
[memberCardService getDisplayTypefinished:^(int result, SAKError *error) {
    if (error) {
        if (finished) {
            @within_main_thread(finished, 0, error);
        }
        return;
    }
    if (finished) {
        @within_main_thread(finished, result, error);
    }
}];
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;TBinaryProtocol的构造需要SAKMascoTransport&lt;ttransport&gt;，而SAKMascoTransport&lt;ttransport&gt;的构造需要：THTTPClient&lt;ttransport&gt;，其中SAKMascoTransport是对THTTPClient的封装。&lt;br&gt;THTTPClient的概念比较简单，主要是read，write及flush（发送网络请求），不管数据的意义，而SAKMascoTransport是有数据概念的，比如header，body，元数据等，将有意义的数据进行组合后，然后掉用THTTPClient的read，write等。&lt;/ttransport&gt;&lt;/ttransport&gt;&lt;/ttransport&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;- (TBinaryProtocol *)createThriftProtocol:(NSString *)serviceURLString headerParameters:(NSDictionary *)headerParameters
{
NSString *commonParameterString = [[[SAKEnvironment environment] commonParameter] queryStringEncoded];
NSString *serviceURLStringWithCommonParameter = [NSString stringWithFormat:@&amp;quot;%@?%@&amp;quot;, serviceURLString, commonParameterString];
THTTPClient *httpClient = [[THTTPClient alloc] initWithURL:[NSURL URLWithString:serviceURLStringWithCommonParameter]];
SAKMascoTransport *mascoTransport = [[SAKMascoTransport alloc] initWithTransport:httpClient andSerialID:1];

[headerParameters enumerateKeysAndObjectsUsingBlock:^(id key, id obj, BOOL *stop) {
    NSString *keyString = (NSString *)key;
    if (keyString.length) {
        [mascoTransport appendHeaderData:[keyString dataUsingEncoding:NSUTF8StringEncoding]];
    }

    // Replace user id and user token
    NSString *valueString = (NSString *)obj;
    if ([valueString isEqualToString:kUserID]) {
        valueString = [valueString stringByReplacingOccurrencesOfString:kUserID withString:(self.user ? [self.user.userID stringValue] : @&amp;quot;&amp;quot;)];
    }
    else if ([valueString isEqualToString:kUserToken]) {
        valueString = [valueString stringByReplacingOccurrencesOfString:kUserToken withString:(self.user ? self.user.token : @&amp;quot;&amp;quot;)];
    } else {
        // Do nothing
    }

    if (valueString.length) {
        [mascoTransport appendHeaderData:[valueString dataUsingEncoding:NSUTF8StringEncoding]];
    }
}];

    TBinaryProtocol *customProtocol = [[TBinaryProtocol alloc] initWithTransport:mascoTransport strictRead:NO strictWrite:YES];
    return customProtocol;
}
&lt;/code&gt;&lt;/pre&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;其实thrift和点评的nvobject蛮像的，其中，TBinaryProtocol都是二进制传输，然后将属性的字段进行压缩，较少网络传输的数据。&lt;br&gt;比如点评是采用hash值，每个对象的属性都有个hash值，然后传输此hash值，客户端根据hash值对应属性，而thrift是采用编号的方式，在idl描述文件中，就已经设置好了编号，然后传输编号到服务端，客户端根据编号对应属性。
&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;thrift -gen cocoa &lt;em&gt;**&lt;/em&gt;&lt;/strong&gt;.thrift 生成.h.m文件，然后添加工程，然后调用方法如下：**&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>JetBrains产品注册码</title>
    <link href="http://theewind.github.io/2016/04/29/JetBrains%E6%B3%A8%E5%86%8C%E7%A0%81/"/>
    <id>http://theewind.github.io/2016/04/29/JetBrains注册码/</id>
    <published>2016-04-29T08:45:47.000Z</published>
    <updated>2016-04-29T08:48:18.000Z</updated>
    
    <content type="html">&lt;p&gt;对于JetBrains系列产品，比如webStorm，appCode等，注册很简单：选择 License Servers，然后输入&lt;a href=&quot;http://idea.qinxi1992.cn，点击OK&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://idea.qinxi1992.cn，点击OK&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;参考：&lt;a href=&quot;http://idea.lanyus.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;IntelliJ IDEA 注册码&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;有条件的还是支持正版吧~~~&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;对于JetBrains系列产品，比如webStorm，appCode等，注册很简单：选择 License Servers，然后输入&lt;a href=&quot;http://idea.qinxi1992.cn，点击OK&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;h
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>代码分析脚本</title>
    <link href="http://theewind.github.io/2016/04/29/%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90%E8%84%9A%E6%9C%AC/"/>
    <id>http://theewind.github.io/2016/04/29/代码分析脚本/</id>
    <published>2016-04-29T06:40:40.000Z</published>
    <updated>2016-04-29T08:48:42.000Z</updated>
    
    <content type="html">&lt;p&gt;iOS开发过程中，随着版本迭代的更新，会有很多无用代码及文件产生，今天主要是参考网上的一些内容，并进行思路分析，给需要的人提供一个参考。&lt;/p&gt;
&lt;p&gt;主要参考&lt;a href=&quot;http://stackoverflow.com/questions/14631204/finding-unused-files-in-xcode&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Finding unused files in Xcode&lt;/a&gt; 里面有很多脚本，因为自己对shell脚本也不是很熟悉，边看边学习。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;第一个脚本&lt;a href=&quot;https://github.com/arun80/xcodeutils&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/arun80/xcodeutils&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#!/bin/sh&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#print usual html headers&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;quot;&amp;lt;html&amp;gt;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;quot;&amp;lt;h2&amp;gt; Unused resources &amp;lt;/h2&amp;gt;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#usual disclaimer&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#&amp;lt;i&amp;gt; 标签：斜体，b 粗体&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;quot;&amp;lt;i&amp;gt; &amp;lt;b&amp;gt;Note:&amp;lt;/b&amp;gt; This scans all the xib, nib files for the images available. Please look for splash screens or other images carefully in the below list which are used in the project definition (pbxproj file).&amp;lt;br&amp;gt;In order for links to work the report file must be in the same folder as project.&amp;lt;/i&amp;gt;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;unusedfiles=&amp;quot;&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#initialize the counter&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;let count=0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;let totalsize=0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# collect the files needs to be introspected&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#find命令 -o(or) 默认为 -a(and) &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;project=`find $1 -name &amp;apos;*.?ib&amp;apos; -o -name &amp;apos;*.[mh]&amp;apos; -o -name &amp;apos;*.storyboard&amp;apos;`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for i in `find $1 -name &amp;apos;*.gif&amp;apos; -o -name &amp;apos;*.jpg&amp;apos; -o -name &amp;apos;*.png&amp;apos; -o -name &amp;apos;*.jpeg&amp;apos;`; do&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;file=`basename -s .jpg &amp;quot;$i&amp;quot; | xargs basename -s .png | xargs basename -s @2x | xargs basename -s @3x`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if ! grep -q $file $project; then&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;filesize=`stat -f &amp;quot;%z&amp;quot; $i`;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;filesizekb=`echo &amp;quot;$filesize 1024.0&amp;quot; | awk &amp;apos;&amp;#123;printf &amp;quot;%.2f&amp;quot;, $1 / $2&amp;#125;&amp;apos;`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;unusedfiles=&amp;quot;$unusedfiles &amp;lt;br&amp;gt; &amp;lt;a href=\&amp;quot;$i\&amp;quot;&amp;gt;$i&amp;lt;/a&amp;gt; ($filesizekb kb)&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;let &amp;quot;count += 1&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;let &amp;quot;totalsize += $filesize&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fi&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;done&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#construct body&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;totalsizekb=`echo &amp;quot;$totalsize 1024.0&amp;quot; | awk &amp;apos;&amp;#123;printf &amp;quot;%.2f&amp;quot;, $1 / $2&amp;#125;&amp;apos;`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;quot;&amp;lt;body&amp;gt;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;quot;&amp;lt;h3&amp;gt;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;quot;There are $count unused images (total size: $totalsizekb kb)&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;quot;&amp;lt;/h3&amp;gt;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;quot;&amp;lt;pre&amp;gt;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#generate body content if there are unused files.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if [ $count &amp;gt; 0 ]; then&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo $unusedfiles;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fi&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;quot;&amp;lt;/pre&amp;gt;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#---------------------------------------------------------------------------------------&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Experimental util to find the source files which are not defined in pbxproj definition.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#---------------------------------------------------------------------------------------&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;count=0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;unusedfiles=&amp;quot;&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;project=`find $1 -name &amp;apos;*.pbxproj&amp;apos;`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for i in `find $1 -name &amp;quot;*.[hmca]&amp;quot; -o -name &amp;quot;*.cpp&amp;quot;`; do&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;file=`basename &amp;quot;$i&amp;quot;`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if ! grep -q $file $project; then&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;unusedfiles=&amp;quot;$unusedfiles &amp;lt;br&amp;gt; $i&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;let &amp;quot;count = count + 1&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fi&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;done&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;quot;&amp;lt;i&amp;gt; &amp;lt;b&amp;gt;Note:&amp;lt;/b&amp;gt; This scans all source files (*.h, *.m, *.c, *.a, *.cpp) references in all pbxproj definitions. Once it is added into project definitions, it is considered being used.&amp;lt;/i&amp;gt; &amp;lt;br&amp;gt;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;quot;&amp;lt;h3&amp;gt;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;quot;There are $count unused files&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;quot;&amp;lt;/h3&amp;gt;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;quot;&amp;lt;pre&amp;gt;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#generate body content if there are unused files.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if [ $count &amp;gt; 0 ]; then&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo $unusedfiles;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fi&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;quot;&amp;lt;/pre&amp;gt;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;quot;&amp;lt;/body&amp;gt;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;quot;&amp;lt;/html&amp;gt;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#thats it!&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;自己需要学习的脚本命令有：&lt;br&gt;&lt;a href=&quot;http://www.cnblogs.com/perfy/archive/2012/07/24/2606101.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Linux下xargs命令详解&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;xargs命令，例如：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;find /sbin -perm +700 |ls -l       这个命令是错误的&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;find /sbin -perm +700 |xargs ls -l   这样才是正确的&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;find ./ -name  *.[mh] |xargs basename&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;grep -q用于if逻辑判断&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;突然发现grep -q 用于if 逻辑判断很好用。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-q 参数，本意是 Quiet; do not write anything to standard output.  Exit immediately with zero status if any match is found, even if an error was detected.   中文意思为，安静模式，不打印任何标准输出。如果有匹配的内容则立即返回状态值0。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;小应用&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# cat a.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;nihao &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;nihaooo&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hello&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#  if  grep -q hello a.txt ; then echo yes;else echo no; fi &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;yes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# if grep -q word a.txt; then echo yes; else echo no; fi&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;no&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;stat -f &amp;quot;%z&amp;quot; README.MD 显示readme.md的大小&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-f : 显示文件所在的文件系统的状态&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;分析：此脚本首先是是扫描图片文件，jpg，png，jpeg，gif，然后从xib，nib，stroyboard，&lt;em&gt;.[mh]总查找，看是否存在，如果不存在则记录名称及大小。然后判断判断 &lt;/em&gt;.[hmca|cpp]等文件，是否在 *.pbxproj中，并输出。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;iOS开发过程中，随着版本迭代的更新，会有很多无用代码及文件产生，今天主要是参考网上的一些内容，并进行思路分析，给需要的人提供一个参考。&lt;/p&gt;
&lt;p&gt;主要参考&lt;a href=&quot;http://stackoverflow.com/questions/14631204/finding-unused-files-in-xcode&quot;&gt;Finding unused files in Xcode&lt;/a&gt; 里面有很多脚本，因为自己对shell脚本也不是很熟悉，边看边学习。&lt;/p&gt;
    
    </summary>
    
    
      <category term="脚本" scheme="http://theewind.github.io/tags/%E8%84%9A%E6%9C%AC/"/>
    
      <category term="代码检测" scheme="http://theewind.github.io/tags/%E4%BB%A3%E7%A0%81%E6%A3%80%E6%B5%8B/"/>
    
  </entry>
  
  <entry>
    <title>iOS归档之NSKeyedArchiver</title>
    <link href="http://theewind.github.io/2016/04/29/ios%E5%BD%92%E6%A1%A3%E9%9C%80%E8%A6%81%E6%B3%A8%E6%84%8F/"/>
    <id>http://theewind.github.io/2016/04/29/ios归档需要注意/</id>
    <published>2016-04-29T06:01:52.000Z</published>
    <updated>2016-04-29T06:04:42.000Z</updated>
    
    <content type="html">&lt;p&gt;如果对象是NSString、NSDictionary、NSArray、NSData、NSNumber等类型，可以直接用NSKeyedArchiver进行归档和恢复。&lt;/p&gt;
&lt;p&gt;不是所有的对象都可以直接用这种方法进行归档，只有遵守了NSCoding协议的对象才可以。&lt;/p&gt;
&lt;p&gt;NSCoding协议有2个方法：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;encodeWithCoder:
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;每次归档对象时，都会调用这个方法。一般在这个方法里面指定如何归档对象中的每个实例变量，可以使用encodeObject:forKey:方法归档实例变量&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;initWithCoder:
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;每次从文件中恢复(解码)对象时，都会调用这个方法。一般在这个方法里面指定如何解码文件中的数据为对象的实例变量，可以使用decodeObject:forKey方法解码实例变量&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;如果对象是NSString、NSDictionary、NSArray、NSData、NSNumber等类型，可以直接用NSKeyedArchiver进行归档和恢复。&lt;/p&gt;
&lt;p&gt;不是所有的对象都可以直接用这种方法进行归档，只有遵守了NSCoding协议的对象才可以。&lt;/p
    
    </summary>
    
    
      <category term="iOS" scheme="http://theewind.github.io/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>JS == 与 ===的区别</title>
    <link href="http://theewind.github.io/2016/04/28/%E4%BB%8A%E5%A4%A9%E5%A5%BD%E5%85%B4%E5%A5%8B/"/>
    <id>http://theewind.github.io/2016/04/28/今天好兴奋/</id>
    <published>2016-04-28T09:58:08.000Z</published>
    <updated>2016-05-26T07:26:39.000Z</updated>
    
    <content type="html">&lt;h4 id=&quot;1、对于string-number等基础类型，-和-是有区别的&quot;&gt;&lt;a href=&quot;#1、对于string-number等基础类型，-和-是有区别的&quot; class=&quot;headerlink&quot; title=&quot;1、对于string,number等基础类型，==和===是有区别的&quot;&gt;&lt;/a&gt;1、对于string,number等基础类型，==和===是有区别的&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;1）不同类型间比较，==之比较“转化成同一类型后的值”看“值”是否相等，===如果类型不同，其结果就是不等&lt;/li&gt;
&lt;li&gt;2）同类型比较，直接进行“值”比较，两者结果一样&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;2、对于Array-Object等高级类型，-和-是没有区别的&quot;&gt;&lt;a href=&quot;#2、对于Array-Object等高级类型，-和-是没有区别的&quot; class=&quot;headerlink&quot; title=&quot;2、对于Array,Object等高级类型，==和===是没有区别的&quot;&gt;&lt;/a&gt;2、对于Array,Object等高级类型，==和===是没有区别的&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;进行“指针地址”比较&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;3、基础类型与高级类型，-和-是有区别的&quot;&gt;&lt;a href=&quot;#3、基础类型与高级类型，-和-是有区别的&quot; class=&quot;headerlink&quot; title=&quot;3、基础类型与高级类型，==和===是有区别的&quot;&gt;&lt;/a&gt;3、基础类型与高级类型，==和===是有区别的&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;1）对于==，将高级转化为基础类型，进行“值”比较&lt;/li&gt;
&lt;li&gt;2）因为类型不同，===结果为false&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;1、对于string-number等基础类型，-和-是有区别的&quot;&gt;&lt;a href=&quot;#1、对于string-number等基础类型，-和-是有区别的&quot; class=&quot;headerlink&quot; title=&quot;1、对于string,number等基础类型，==和===是
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://theewind.github.io/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>hexo 基础</title>
    <link href="http://theewind.github.io/2016/04/28/hexo-study/"/>
    <id>http://theewind.github.io/2016/04/28/hexo-study/</id>
    <published>2016-04-28T09:44:20.000Z</published>
    <updated>2016-04-28T09:51:46.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;tags的用法&quot;&gt;&lt;a href=&quot;#tags的用法&quot; class=&quot;headerlink&quot; title=&quot;tags的用法&quot;&gt;&lt;/a&gt;tags的用法&lt;/h3&gt;&lt;p&gt;基本使用方法是：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;tags: hexo
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果一行多个标签，使用&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;tags: [hexo, hexo1, hexo2, ...]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果一篇文章属于多个标签&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;tags: 
- hexo
- hexo2
- hexo3
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;new-和-new-page&quot;&gt;&lt;a href=&quot;#new-和-new-page&quot; class=&quot;headerlink&quot; title=&quot;new 和 new page&quot;&gt;&lt;/a&gt;new 和 new page&lt;/h3&gt;&lt;p&gt;最终生成的静态文档都在public下&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;new: 统一在归档目录 archive下&lt;/li&gt;
&lt;li&gt;new page: 新建一个目录，比如about，然后在theme/yilia/_config.yml 的 menu下可以添加新的模块，比如 about: /about    &lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;tags的用法&quot;&gt;&lt;a href=&quot;#tags的用法&quot; class=&quot;headerlink&quot; title=&quot;tags的用法&quot;&gt;&lt;/a&gt;tags的用法&lt;/h3&gt;&lt;p&gt;基本使用方法是：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;tags: hexo
&lt;/code&gt;&lt;/pre&gt;&lt;p
    
    </summary>
    
    
      <category term="hexo" scheme="http://theewind.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>swift 学习计划</title>
    <link href="http://theewind.github.io/2016/04/28/swift/"/>
    <id>http://theewind.github.io/2016/04/28/swift/</id>
    <published>2016-04-28T09:39:06.000Z</published>
    <updated>2016-04-28T09:55:18.000Z</updated>
    
    <content type="html"></content>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="swift" scheme="http://theewind.github.io/tags/swift/"/>
    
  </entry>
  
  <entry>
    <title>Hexo 学习</title>
    <link href="http://theewind.github.io/2016/04/28/hexo-first/"/>
    <id>http://theewind.github.io/2016/04/28/hexo-first/</id>
    <published>2016-04-28T02:55:40.000Z</published>
    <updated>2016-04-28T09:57:07.000Z</updated>
    
    <content type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/writing.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Writing&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Run-server&quot;&gt;&lt;a href=&quot;#Run-server&quot; class=&quot;headerlink&quot; title=&quot;Run server&quot;&gt;&lt;/a&gt;Run server&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/server.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Server&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Generate-static-files&quot;&gt;&lt;a href=&quot;#Generate-static-files&quot; class=&quot;headerlink&quot; title=&quot;Generate static files&quot;&gt;&lt;/a&gt;Generate static files&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo generate&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/generating.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Generating&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Deploy-to-remote-sites&quot;&gt;&lt;a href=&quot;#Deploy-to-remote-sites&quot; class=&quot;headerlink&quot; title=&quot;Deploy to remote sites&quot;&gt;&lt;/a&gt;Deploy to remote sites&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo deploy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/deployment.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Deployment&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
    
    </summary>
    
    
      <category term="hexo" scheme="http://theewind.github.io/tags/hexo/"/>
    
      <category term="测试" scheme="http://theewind.github.io/tags/%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
</feed>
